// START SNIPPET apply-java-plugin
plugins {
    id 'java'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version = '1.2.1'
// END SNIPPET apply-java-plugin

// START SNIPPET java-dependency-mgmt
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.hibernate:hibernate-core:3.6.7.Final'
}
// END SNIPPET java-dependency-mgmt

// START SNIPPET java-basic-test-config
dependencies {
    testImplementation 'junit:junit:4.12'
}

test {
    useJUnit()

    maxHeapSize = '1G'
}
// END SNIPPET java-basic-test-config

// START SNIPPET practical-integ-test-source-set
sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    intTestImplementation 'junit:junit:4.12'
}
// END SNIPPET practical-integ-test-source-set

// START SNIPPET using-custom-doclet
configurations {
    asciidoclet
}

dependencies {
    asciidoclet 'org.asciidoctor:asciidoclet:1.+'
}

javadoc {
    options.docletpath = configurations.asciidoclet.files.toList()
    options.doclet = 'org.asciidoctor.Asciidoclet'
}
// END SNIPPET using-custom-doclet


// START SNIPPET skip-tests-condition
test.onlyIf { !project.hasProperty('mySkipTests') }
// END SNIPPET skip-tests-condition

// START SNIPPET java-compiler-options
compileJava {
    options.fork = true
    options.failOnError = false
}
// END SNIPPET java-compiler-options

// START SNIPPET integ-test-task
task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest
// END SNIPPET integ-test-task

// START SNIPPET defining-sources-jar-task
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}
// END SNIPPET defining-sources-jar-task


// START SNIPPET defining-custom-javadoc-task
task testJavadoc(type: Javadoc) {
    source = sourceSets.test.allJava
}
// END SNIPPET defining-custom-javadoc-task
